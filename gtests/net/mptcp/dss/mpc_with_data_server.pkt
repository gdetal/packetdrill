// connection initiated by packetdrill
--tolerance_usecs=100000
`../common/defaults.sh`

+0     socket(..., SOCK_STREAM, IPPROTO_MPTCP) = 3
+0     setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0

+0     `nstat -n`
+0     bind(3, ..., ...) = 0
+0     listen(3, 1) = 0
+0       <  S   0:0(0)                  win 32792  <mss 1460, sackOK, nop, nop, nop, wscale 7, mpcapable v1 flags[flag_h] nokey>
+0       >  S.  0:0(0)        ack 1                <mss 1460, nop, nop, sackOK, nop, wscale 8, mpcapable v1 flags[flag_h] key[skey]>
+0.01    <   .  1:1(0)        ack 1     win 257                                               <mpcapable v1 flags[flag_h] key[ckey=2, skey]>
+0     accept(3, ..., ...) = 4

+0.01    <  P.  1:101(100)    ack 1     win 225                                               <mpcapable v1 flags[flag_h] key[ckey=2, skey] mpcdatalen 100, nop, nop>
+0.01    >   .  1:1(0)        ack 101              <dss dack8=101  nocs>

// test mibs
+0.01  `test $(nstat -zjs | jq '.kernel.MPTcpExtMPCapableSYNRX') -eq 1`
+0     `test $(nstat -zjs | jq '.kernel.MPTcpExtMPCapableFallbackACK') -eq 0`

// send 1 data segments and ack them
+0     write(4, ..., 1000) = 1000
+0       >  P.  1:1001(1000)  ack 101              <dss dack8=101  dsn8=1    ssn=1 dll=1000 nocs, nop, nop>
+0.1     <   .  101:101(0)    ack 1001  win 225    <dss dack8=1001 dsn8=1    ssn=1 dll=100  nocs, nop, nop>

// read 100 bytes from the MPC+data
+0.01  read(4, ..., 100) = 100
+0     close(4) = 0
+0       >   .  1001:1001(0)  ack 101              <dss dack8=101  dsn8=1001 ssn=0 dll=1    nocs fin, nop, nop>
+0       <   .  101:101(0)    ack 1001  win 225    <dss dack8=1002 nocs>
