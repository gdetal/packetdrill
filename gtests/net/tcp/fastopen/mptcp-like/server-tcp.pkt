// Receive data with TFO + cookie
--tolerance_usecs=100000
`../common/defaults.sh`

// A first connection to store the cookie
 0.0    socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
+0.0    setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
+0.0    setsockopt(3, SOL_TCP, TCP_FASTOPEN, [2], 4) = 0

+0.0    bind(3, ..., ...) = 0
+0.0    listen(3, 1) = 0

+0.0      <  S   0:0(0)         win 65535  <mss 1460, sackOK, TS val 100 ecr 0,   nop, wscale 8, FO, nop, nop>
+0.01     >  S.  0:0(0)  ack 1             <mss 1460, sackOK, TS val 700 ecr 100, nop, wscale 8, FO TFO_COOKIE, nop, nop>
+0.01     <   .  1:1(0)  ack 1  win 450    <nop, nop,         TS val 100 ecr 700>

+0.01   accept(3, ..., ...) = 4
+0.0    close(4) = 0
+0.0      >  F.  1:1(0)  ack 1             <nop, nop,         TS val 100 ecr 700>
+0.0      <  F.  1:1(0)  ack 2  win 450    <nop, nop,         TS val 100 ecr 700>
+0.0      >   .  2:2(0)  ack 2             <nop, nop,         TS val 100 ecr 700>
+0.0      <  R.  2:2(0)  ack 2  win 450    <nop, nop,         TS val 100 ecr 700>

// Not supported by Packetdrill yet? (it doesn't understand it is a new connection)
// Another Fastopen request, now SYN will have data
+0.01     <  S   0:500(500)                win 65535  <mss 1460, sackOK, TS val 100 ecr 0,   nop, wscale 8, FO TFO_COOKIE, nop, nop>
// +0.01  >  S.  0:0(0)          ack 501              <mss 1460, sackOK, TS val 700 ecr 100, nop, wscale 8>
// +0.01  <   .  501:501(0)      ack 1     win 450    <nop, nop,         TS val 100 ecr 700>
